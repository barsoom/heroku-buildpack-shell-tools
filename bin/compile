#!/usr/bin/env ruby

require "fileutils"

$build_dir = ARGV[0]
$cache_dir = ARGV[1]
$env_dir = ARGV[2]

$vim_version = "7.4"
$vim_sha = "d0f5a6d2c439f02d97fa21bd9121f4c5abb1f6cd8b5a79d3ca82867495734ade"

profile_d_path = "#{$build_dir}/.profile.d"
profile_path="#{profile_d_path}/shell-tools.sh"

FileUtils.mkdir_p(profile_d_path)
FileUtils.mkdir_p($cache_dir)

File.write(profile_path, %{
export PATH=/app/vendor/vim/bin:$PATH
})

# If you want ENV loaded in the build script, uncomment this:
#Dir.entries($env_dir).each do |file_name|
#  next if file_name.include?(".")
#
#  ENV[file_name] = File.read("#{$env_dir}/#{file_name}").chomp
#end

def run(command)
  system(command) || exit(1)
end

def main
  install_vim
end

def install_vim
  script_version = 2 # Added some deps

  cache_path = "#{$cache_dir}/vim-#{$vim_version}-#{script_version}.tar.gz"
  unless File.exists?(cache_path)
    puts "-----> Compiling vim"
    run %{
      cd /tmp &&
      curl -s ftp://ftp.vim.org/pub/vim/unix/vim-#{$vim_version}.tar.bz2 > vim-#{$vim_version}.tar.bz2 &&
      echo "#{$vim_sha}  vim-#{$vim_version}.tar.bz2" | sha256sum -c &&
      mkdir vim-source &&
      tar xfj vim-#{$vim_version}.tar.bz2 -C vim-source --strip-components 1 &&
      cd vim-source &&
      # Options from an example of how to build a static vim. We don't need that,
      # but we do want a vim that does not depend on X11, etc.
      #
      # Copied from https://github.com/ericpruitt/static-glibc-vim/blob/master/Makefile
      ./configure --disable-channel \
                --disable-gpm \
                --disable-gtktest \
                --disable-gui \
                --disable-netbeans \
                --disable-nls \
                --disable-selinux \
                --disable-smack \
                --disable-sysmouse \
                --disable-xsmp \
                --enable-multibyte \
                --with-features=normal \
                --without-x \
                --prefix=/tmp/vim &&
      make &&
      make install &&
      cd .. &&
      tar cfz #{cache_path} vim
    }
  end

  install "vim", cache_path
end

def install(name, cache_path)
  puts "-----> Installing #{name}"
  run "mkdir -p #{$build_dir}/vendor && cd #{$build_dir}/vendor && tar xfz #{cache_path}"
end

main
